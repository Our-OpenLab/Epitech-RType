# Single step: Set up a complete environment with all necessary dependencies
FROM ubuntu:24.04

# Install essential tools, GCC 14, Python, and other system dependencies
RUN apt-get update && apt-get install -y \
    wget \
    gnupg2 \
    software-properties-common \
    build-essential \
    libssl-dev \
    python3 \
    python3-pip \
    python3-venv \
    pkg-config \
    gcc-14 \
    g++-14 \
    git \
    curl

# Install CMake 3.31
# RUN wget https://github.com/Kitware/CMake/releases/download/v3.31.0/cmake-3.31.0.tar.gz && \
#     tar -zxvf cmake-3.31.0.tar.gz && \
#     rm cmake-3.31.0.tar.gz && \
#     cd cmake-3.31.0 && \
#     ./bootstrap && \
#     make -j$(nproc) && \
#     make install && \
#     cd / && rm -rf /cmake-3.31.0

# Install CMake (precompiled binary for linux-x86_64)
RUN wget https://github.com/Kitware/CMake/releases/download/v3.31.0/cmake-3.31.0.tar.gz && \
    tar -zxvf cmake-3.31.0.tar.gz && \
    rm cmake-3.31.0.tar.gz && \
    cd cmake-3.31.0 && \
    ./bootstrap && \
    make -j$(nproc) && \
    make install && \
    cd / && rm -rf /cmake-3.31.0

# Install a Python virtual environment and Conan
RUN python3 -m venv /opt/conan-env && \
    /opt/conan-env/bin/pip install --upgrade pip && \
    /opt/conan-env/bin/pip install conan

# Configure Conan with the detected profile
RUN /opt/conan-env/bin/conan profile detect

# Set environment variables
ENV PATH="/opt/conan-env/bin:$PATH" \
    CC=/usr/bin/gcc-14 \
    CXX=/usr/bin/g++-14

# Set root user for future installations
USER root

RUN conan install --requires=asio/1.32.0 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=sdl/2.28.3 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=opengl/system --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=glew/2.2.0 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=glm/cci.20230113 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=libcurl/8.10.1 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=nlohmann_json/3.11.3 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=concurrentqueue/1.0.4 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=libsodium/cci.20220430 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=libpqxx/7.10.0 --build=missing -c tools.system.package_manager:mode=install
RUN conan install --requires=sdl_ttf/2.22.0 --build=missing -c tools.system.package_manager:mode=install

# Step 7: Prepare Conan dependencies
# Set the working directory and copy necessary files for Conan
WORKDIR /app
COPY conanfile.txt CMakeLists.txt /app/
USER root
# Install Conan dependencies (cached if conanfile.txt remains unchanged)
RUN conan install . --build=missing -c tools.system.package_manager:mode=install

# Step 8: Copy the application source code
# Copy the rest of the application files into the container
COPY . /app

# Step 9: Build the application
# Configure and build the application using CMake with Conan presets
RUN cmake --preset conan-release && \
    cmake --build --preset conan-release
